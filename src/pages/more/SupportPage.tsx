import React, { useState, useMemo } from 'react';
import GlassCard from '../../components/GlassCard';
import FAQItem from '../../components/more/FAQItem';

const SupportPage: React.FC = () => {
    const faqCategories = [
        {
            category: "ุฃุณุฆูุฉ ุนุงูุฉ",
            icon: "โ",
            faqs: [
                {
                    q: "ูุง ูู ุชุทุจูู ููุญููุงูุ",
                    a: "ููุญููุงู ูู ุชุทุจูู ุฅุณูุงูู ุดุงูู ูุตูู ููููู ุฑูููู ุงูุฑูุญู ุงูููููุ ูุณุงุนุฏู ุนูู ุชูุธูู ุนุจุงุฏุงุชู ูู ุตููุงุช ูุฃุฐูุงุฑ ููุฑุงุกุฉ ูููุฑุขู ุงููุฑููุ ูุน ูุชุงุจุนุฉ ุชูุฏูู ุนุจุฑ ุฅุญุตุงุฆูุงุช ูุชุญุฏูุงุช ูุญูุฒุฉ."
                },
                {
                    q: "ูู ุงูุชุทุจูู ูุฌุงููุ",
                    a: "ูุนูุ ุชุทุจูู ููุญููุงู ูุฌุงูู ุจุงููุงูู ูููุฏู ูุฎุฏูุฉ ุงููุณูููู ูู ูู ููุงู. ูุฐุง ุงูุนูู ูู ููู ููุฌู ุงููู ุชุนุงูู."
                },
                 {
                    q: "ูุฌุฏุช ุฎุทุฃ ูู ูุญุชูู ุงูุชุทุจููุ ููู ุฃุจูุบ ุนููุ",
                    a: "ูุนุชุฐุฑ ุนู ุฃู ุฎุทุฃ ูุฏ ุชุฌุฏู. ูุฑุฌู ูุฑุงุณูุชูุง ููุฑูุง ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุงูููุถุญ ูู ูุณู 'ุชูุงุตู ูุนูุง' ูุน ุชูุงุตูู ุงูุฎุทุฃุ ูุณูุนูู ุนูู ุชุตุญูุญู ูู ุฃูุฑุจ ููุช ูููู. ุฌุฒุงูู ุงููู ุฎูุฑูุง."
                }
            ]
        },
        {
            category: "ุงูุจูุงูุงุช ูุงูุฎุตูุตูุฉ",
            icon: "๐",
            faqs: [
                 {
                    q: "ุฃูู ูุชู ุญูุธ ุจูุงูุงุชูุ ููู ูู ุขููุฉุ",
                    a: "ูุชู ุญูุธ ุฌููุน ุจูุงูุงุชู (ุตููุงุชูุ ุฃุฐูุงุฑูุ ุชูุฏูู) ุจุดูู ุขูู ูู ุงูุชุฎุฒูู ุงููุญูู ููุชุตูุญู ุนูู ุฌูุงุฒู ุงูุฎุงุต. ูุฐุง ูุนูู ุฃู ุจูุงูุงุชู ูุง ุชุบุงุฏุฑ ุฌูุงุฒู ููู ุฎุงุตุฉ ุจู ุชูุงููุง."
                },
                {
                    q: "ูู ูููููู ุงุณุชุฎุฏุงู ุงูุชุทุจูู ุนูู ุฌูุงุฒ ุขุฎุฑ ููุฒุงููุฉ ุจูุงูุงุชูุ",
                    a: "ุญุงูููุงุ ุจูุงูุงุชู ูุฑุชุจุทุฉ ุจุงููุชุตูุญ ุงูุฐู ุชุณุชุฎุฏูู ุนูู ุฌูุงุฒู ุงูุญุงูู. ูุง ุชูุฌุฏ ูุฒุงููุฉ ุณุญุงุจูุฉ ุจูู ุงูุฃุฌูุฒุฉ ูู ูุฐู ุงููุณุฎุฉุ ูููู ููููู ุงุณุชุฎุฏุงู ููุฒุฉ 'ุชุตุฏูุฑ ุงูุจูุงูุงุช' ูู ููุญุฉ ุงูุชุญูู ูููููุง ูุฏููุงู."
                },
                {
                    q: "ููู ูููููู ุญุฐู ุฌููุน ุจูุงูุงุชูุ",
                    a: "ููููู ุงูุฐูุงุจ ุฅูู 'ุงูุฅุนุฏุงุฏุงุช' ูุงุฎุชูุงุฑ 'ุฅุนุงุฏุฉ ุชุนููู ุงูุชุทุจูู ุจุงููุงูู' ูู ููุทูุฉ ุงูุฎุทุฑ. ูุฐุง ุงูุฅุฌุฑุงุก ุณูุญุฐู ุฌููุน ุจูุงูุงุชู ููุงุฆููุง ููุง ูููู ุงูุชุฑุงุฌุน ุนูู."
                }
            ]
        },
        {
            category: "ููุฒุงุช ุงูุชุทุจูู",
            icon: "โ๏ธ",
            faqs: [
                 {
                    q: "ููู ูุชู ุญุณุงุจ ุฃููุงุช ุงูุตูุงุฉุ",
                    a: "ูุชู ุฌูุจ ุฃููุงุช ุงูุตูุงุฉ ุชููุงุฆููุง ุจูุงุกู ุนูู ูููุน ุฌูุงุฒู. ุฅุฐุง ูู ุชููุญ ุงูุฅุฐู ุจุงููุตูู ูููููุนุ ุณูุชู ุงุณุชุฎุฏุงู ููุงููุช ุงููุงูุฑุฉ ูุฅุนุฏุงุฏ ุงูุชุฑุงุถู. ููููู ุชุบููุฑ ุทุฑููุฉ ุงูุญุณุงุจ ูู 'ุงูุฅุนุฏุงุฏุงุช'."
                },
                {
                    q: "ููู ุชุนูู ุฃููุงุช ุงูุฃุฐูุงุฑุ ููู ูููููู ุชุฎุตูุตูุงุ",
                    a: "ูููู ุงูุชุทุจูู ุจุนุฑุถ ุฃุฐูุงุฑ ุงูุตุจุงุญ ูุงููุณุงุก ุชููุงุฆููุง ุจูุงุกู ุนูู ุงูููุช ุงูุญุงูู. ูููุฒูุฏ ูู ุงููุฑููุฉุ ููููู ุงูุฐูุงุจ ุฅูู 'ุงูุฅุนุฏุงุฏุงุช' ูุชุญุฏูุฏ ููุช ุจุฏุงูุฉ ุฃุฐูุงุฑ ุงูุตุจุงุญ ูุงููุณุงุก ุจููุณู ูููุงุณุจ ุฑูุชููู ุงููููู."
                },
                {
                    q: "ููู ุชุนูู ุงูุฅุญุตุงุฆูุงุช ูุงูููุงุทุ",
                    a: "ุชูุญุณุจ ููุงุทู ุจูุงุกู ุนูู ุฅูุฌุงุฒุงุชู ุงูููููุฉ: 10 ููุงุท ููู ุตูุงุฉ ูู ููุชูุงุ 15 ููุทุฉ ููู ูุฌููุนุฉ ุฃุฐูุงุฑ ููุชููุฉุ ูููุทุชุงู ููู ุตูุญุฉ ุชูุฑุฃูุง ูู ุงููุฑุขู. 'ุงูุฃูุงู ุงููุชุชุงููุฉ' ุชุฒุฏุงุฏ ูู ููู ุชููู ููู 3 ุตููุงุช ุนูู ุงูุฃูู."
                },
                {
                    q: "ููู ุฃุถูู ูุฏูุงู ุดุฎุตูุงูุ",
                    a: "ูู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ ูู ุงูุฃุนูู ุฃู ูู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉุ ุงุฎุชุฑ 'ุฃูุฏุงูู ุงูุดุฎุตูุฉ'. ููุงู ููููู ุฅุถุงูุฉ ูุฏู ุฌุฏูุฏุ ุณูุงุก ูุงู ูุฏููุง ูููููุง (ูุซู ูุฑุงุกุฉ ุฃุฐูุงุฑ ูุนููุฉ) ุฃู ูุฏููุง ูู ูููุฉ ูุญุฏุฏุฉ (ูุซู ูุฑุงุกุฉ ูุชุงุจ)."
                }
            ]
        },
    ];

    const [searchTerm, setSearchTerm] = useState('');
    const [helpfulFeedback, setHelpfulFeedback] = useState<Record<string, 'yes' | 'no' | null>>({});

    const handleFeedback = (question: string, feedback: 'yes' | 'no') => {
        setHelpfulFeedback(prev => ({ ...prev, [question]: feedback }));
    };

    const filteredResults = useMemo(() => {
        if (!searchTerm.trim()) return [];
        
        const lowercasedTerm = searchTerm.toLowerCase();
        const results: { q: string, a: string }[] = [];

        faqCategories.forEach(category => {
            category.faqs.forEach(faq => {
                if (faq.q.toLowerCase().includes(lowercasedTerm) || faq.a.toLowerCase().includes(lowercasedTerm)) {
                    results.push(faq);
                }
            });
        });
        return results;
    }, [searchTerm, faqCategories]);

    return (
        <div className="space-y-6">
            <GlassCard>
                <div className="relative">
                    <input
                        type="search"
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        placeholder="ุงุจุญุซ ุนู ุณุคุงูู ููุง..."
                        className="w-full bg-black/30 border border-white/20 rounded-full px-5 py-3 pr-12 text-white placeholder:text-white/70 focus:outline-none focus:ring-2 focus:ring-yellow-400"
                    />
                     <div className="absolute top-1/2 right-4 -translate-y-1/2 text-white/80">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /></svg>
                    </div>
                </div>
            </GlassCard>

            {searchTerm.trim() ? (
                <GlassCard>
                    <h3 className="font-amiri text-xl text-center mb-4 text-white">ูุชุงุฆุฌ ุงูุจุญุซ</h3>
                     <div className="space-y-3">
                        {filteredResults.length > 0 ? (
                            filteredResults.map((faq, i) => (
                                <FAQItem key={`search-${i}`} q={faq.q} a={faq.a} feedback={helpfulFeedback[faq.q] || null} onFeedback={(feedback) => handleFeedback(faq.q, feedback)} />
                            ))
                        ) : (
                            <p className="text-center text-white/80 py-4">ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ ูุจุญุซู.</p>
                        )}
                    </div>
                </GlassCard>
            ) : (
                faqCategories.map(category => (
                    <GlassCard key={category.category}>
                        <h3 className="font-amiri text-xl text-center mb-4 text-white flex items-center justify-center gap-2"><span className="text-2xl">{category.icon}</span> {category.category}</h3>
                        <div className="space-y-3">
                            {category.faqs.map((faq, i) => <FAQItem key={i} q={faq.q} a={faq.a} feedback={helpfulFeedback[faq.q] || null} onFeedback={(feedback) => handleFeedback(faq.q, feedback)} />)}
                        </div>
                    </GlassCard>
                ))
            )}
            
            <GlassCard className="text-white space-y-4 text-center">
                <div className="text-5xl">๐ง</div>
                <h3 className="font-amiri text-2xl">ุจุญุงุฌุฉ ูููุฒูุฏ ูู ุงููุณุงุนุฏุฉุ</h3>
                <p>ุฅุฐุง ูู ุชุฌุฏ ุฅุฌุงุจุฉ ูุณุคุงููุ ุฃู ูุงู ูุฏูู ุงูุชุฑุงุญ ูุชุทููุฑ ุงูุชุทุจููุ ูุง ุชุชุฑุฏุฏ ูู ุงูุชูุงุตู ูุนูุง.</p>
                <div className="p-4 bg-black/20 rounded-lg">
                    <a href="mailto:support@tech-bokra.com" className="font-bold text-xl text-yellow-300 tracking-wider hover:text-yellow-200 transition-colors">ุชูุงุตู ูุนูุง</a>
                </div>
            </GlassCard>
        </div>
    );
}

export default SupportPage;
